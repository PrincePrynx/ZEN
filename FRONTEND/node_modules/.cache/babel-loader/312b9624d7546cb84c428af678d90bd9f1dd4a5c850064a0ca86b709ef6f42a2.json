{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/ThoughtsBacklog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ThoughtsBacklog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThoughtsBacklog({\n  thoughts\n}) {\n  _s();\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const handleCardClick = index => {\n    setSelectedIndex(index);\n  };\n  const handleCloseModal = () => {\n    setSelectedIndex(null);\n  };\n\n  // Function to close the modal when clicking outside of it\n  const handleOverlayClick = e => {\n    if (e.target.classList.contains('modal-overlay')) {\n      handleCloseModal();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-backlog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Thoughts Backlog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-container\",\n      children: thoughts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcards\",\n        children: thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard\",\n          onClick: () => handleCardClick(index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-title\",\n            children: [\"ENTRY \", index + ONE]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No thoughts logged yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), selectedIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: handleOverlayClick // Close modal on overlay click\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-entry\",\n          children: thoughts[selectedIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ThoughtsBacklog, \"g6EZfCn3YG8ZAWU5EDzAN+FISLA=\");\n_c = ThoughtsBacklog;\nexport default ThoughtsBacklog;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsBacklog\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ThoughtsBacklog","thoughts","_s","selectedIndex","setSelectedIndex","handleCardClick","index","handleCloseModal","handleOverlayClick","e","target","classList","contains","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","thought","onClick","ONE","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/ThoughtsBacklog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ThoughtsBacklog.css';\n\nfunction ThoughtsBacklog({ thoughts }) {\n  const [selectedIndex, setSelectedIndex] = useState(null);\n\n  const handleCardClick = (index) => {\n    setSelectedIndex(index);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedIndex(null);\n  };\n\n  // Function to close the modal when clicking outside of it\n  const handleOverlayClick = (e) => {\n    if (e.target.classList.contains('modal-overlay')) {\n      handleCloseModal();\n    }\n  };\n\n  return (\n    <div className=\"thoughts-backlog\">\n      <h1>Your Thoughts Backlog</h1>\n      <div className=\"flashcard-container\">\n        {thoughts.length > 0 ? (\n          <div className=\"flashcards\">\n            {thoughts.map((thought, index) => (\n              <div\n                key={index}\n                className=\"flashcard\"\n                onClick={() => handleCardClick(index)}\n              >\n                <div className=\"flashcard-title\">\n                  ENTRY {index + ONE}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No thoughts logged yet.</p>\n        )}\n      </div>\n      {selectedIndex !== null && (\n        <div\n          className=\"modal-overlay\"\n          onClick={handleOverlayClick} // Close modal on overlay click\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-entry\">\n              {thoughts[selectedIndex]}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ThoughtsBacklog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMQ,eAAe,GAAIC,KAAK,IAAK;IACjCF,gBAAgB,CAACE,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAIC,CAAC,IAAK;IAChC,IAAIA,CAAC,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;MAChDL,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bf,OAAA;MAAAe,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BnB,OAAA;MAAKc,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EACjCb,QAAQ,CAACkB,MAAM,GAAG,CAAC,gBAClBpB,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBb,QAAQ,CAACmB,GAAG,CAAC,CAACC,OAAO,EAAEf,KAAK,kBAC3BP,OAAA;UAEEc,SAAS,EAAC,WAAW;UACrBS,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACC,KAAK,CAAE;UAAAQ,QAAA,eAEtCf,OAAA;YAAKc,SAAS,EAAC,iBAAiB;YAAAC,QAAA,GAAC,QACzB,EAACR,KAAK,GAAGiB,GAAG;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC,GANDZ,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENnB,OAAA;QAAAe,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC9B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACLf,aAAa,KAAK,IAAI,iBACrBJ,OAAA;MACEc,SAAS,EAAC,eAAe;MACzBS,OAAO,EAAEd,kBAAmB,CAAC;MAAA;MAAAM,QAAA,eAE7Bf,OAAA;QAAKc,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5Bf,OAAA;UAAKc,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBb,QAAQ,CAACE,aAAa;QAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAtDQF,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAwDxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}