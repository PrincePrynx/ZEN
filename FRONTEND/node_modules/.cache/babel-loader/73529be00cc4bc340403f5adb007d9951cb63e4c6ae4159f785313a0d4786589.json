{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Ensure this file exists\nimport MoodTracker from './components/MoodTracker'; // Import MoodTracker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('#ffffff'); // Default background color\n  const [thoughts, setThoughts] = useState([]); // Array to store user thoughts\n\n  // Function to handle text input\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInput(value);\n\n    // Calculate background color based on input length\n    const color = calculateBackgroundColor(value.length);\n    setBackgroundColor(color);\n  };\n\n  // Function to calculate the background color based on the length of input\n  const calculateBackgroundColor = length => {\n    // Define a gradient transition based on length\n    const maxLength = 100; // Define a max length for color transition\n    const ratio = Math.min(length / maxLength, 1); // Calculate ratio based on input length\n\n    // Interpolate color from red to green\n    const red = Math.floor(255 * (1 - ratio));\n    const green = Math.floor(255 * ratio);\n    const blue = 200; // Fixed blue component for simplicity\n\n    return `rgb(${red}, ${green}, ${blue})`;\n  };\n\n  // Function to handle submission of thoughts\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Add the current input to the thoughts array\n    if (input.trim()) {\n      setThoughts([...thoughts, input]);\n\n      // Clear the input field after submission\n      setInput('');\n\n      // Reset background color\n      setBackgroundColor('#ffffff');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to ZEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your thoughts here...\",\n          rows: \"5\",\n          cols: \"30\",\n          style: {\n            resize: 'none',\n            padding: '10px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: [thoughts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Submitted Thoughts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: thought\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), input && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your thoughts have been noted!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoodTracker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZScRHjBaTaP2SXhsHbJpw1o2x4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoodTracker","jsxDEV","_jsxDEV","App","_s","input","setInput","backgroundColor","setBackgroundColor","thoughts","setThoughts","handleInputChange","event","value","target","color","calculateBackgroundColor","length","maxLength","ratio","Math","min","red","floor","green","blue","handleSubmit","preventDefault","trim","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","rows","cols","resize","padding","fontSize","type","map","thought","index","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Ensure this file exists\nimport MoodTracker from './components/MoodTracker'; // Import MoodTracker\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('#ffffff'); // Default background color\n  const [thoughts, setThoughts] = useState([]); // Array to store user thoughts\n\n  // Function to handle text input\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    setInput(value);\n\n    // Calculate background color based on input length\n    const color = calculateBackgroundColor(value.length);\n    setBackgroundColor(color);\n  };\n\n  // Function to calculate the background color based on the length of input\n  const calculateBackgroundColor = (length) => {\n    // Define a gradient transition based on length\n    const maxLength = 100; // Define a max length for color transition\n    const ratio = Math.min(length / maxLength, 1); // Calculate ratio based on input length\n\n    // Interpolate color from red to green\n    const red = Math.floor(255 * (1 - ratio));\n    const green = Math.floor(255 * ratio);\n    const blue = 200; // Fixed blue component for simplicity\n\n    return `rgb(${red}, ${green}, ${blue})`;\n  };\n\n  // Function to handle submission of thoughts\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Add the current input to the thoughts array\n    if (input.trim()) {\n      setThoughts([...thoughts, input]);\n\n      // Clear the input field after submission\n      setInput('');\n\n      // Reset background color\n      setBackgroundColor('#ffffff');\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ backgroundColor }}>\n      <header className=\"App-header\">\n        <h1>Welcome to ZEN</h1>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"Type your thoughts here...\"\n            rows=\"5\"\n            cols=\"30\"\n            style={{ resize: 'none', padding: '10px', fontSize: '16px' }}\n          />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <div className=\"feedback\">\n          {thoughts.length > 0 && (\n            <div>\n              <h2>Your Submitted Thoughts:</h2>\n              <ul>\n                {thoughts.map((thought, index) => (\n                  <li key={index}>{thought}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n          {input && <p>Your thoughts have been noted!</p>}\n        </div>\n        <MoodTracker /> {/* Use MoodTracker component */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}