{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './ThoughtsVilla.css';\n\n// function ThoughtsVilla() {\n//   const [thought, setThought] = useState('');\n//   const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)'); // Starting with a dull color\n//   const [explosion, setExplosion] = useState(false);\n\n//   const handleThoughtChange = (e) => {\n//     const inputText = e.target.value;\n//     setThought(inputText);\n\n//     // Calculate the background color based on input length\n//     const inputLength = inputText.length;\n//     const maxLength = 100; // Define a max length for mapping\n//     const colorValue = Math.min(255, Math.floor((inputLength / maxLength) * 255));\n\n//     // Create a gradient from dull color to bright color\n//     const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n//     setBackgroundColor(newBackgroundColor);\n//   };\n\n//   const handleThoughtSubmit = (e) => {\n//     e.preventDefault();\n//     // Perform actions on submit, like saving the thought or transitioning the color\n//     // Add explosion animation here\n//     setExplosion(true);\n//     setTimeout(() => {\n//       setExplosion(false);\n//       setThought('');\n//       setBackgroundColor('rgb(169, 169, 169)'); // Reset background color to dull\n//     }, 1000); // Adjust the duration as needed\n//   };\n\n//   return (\n//     <div className=\"thoughts-villa\" style={{ backgroundColor: backgroundColor }}>\n//       <h1>Thoughts Villa</h1>\n//       <form onSubmit={handleThoughtSubmit}>\n//         <textarea\n//           value={thought}\n//           onChange={handleThoughtChange}\n//           placeholder=\"Type your thoughts here...\"\n//           className={`thought-input ${explosion ? 'explode' : ''}`}\n//         ></textarea>\n//         <button type=\"submit\" className=\"submit-button\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ThoughtsVilla;import React, { useState } from 'react';\nimport React, { useState } from 'react';\nimport Terminal, { TerminalOutput, TerminalInput } from 'react-terminal-ui';\nimport './ThoughtsVilla.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThoughtsVilla() {\n  _s();\n  const [thoughts, setThoughts] = useState([]);\n  const [terminalLineData, setTerminalLineData] = useState([/*#__PURE__*/_jsxDEV(TerminalOutput, {\n    children: \"Enter your thoughts below:\"\n  }, 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)]);\n  const handleInput = input => {\n    const newLine = /*#__PURE__*/_jsxDEV(TerminalOutput, {\n      children: input\n    }, terminalLineData.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this);\n    setThoughts([...thoughts, input]);\n    setTerminalLineData([...terminalLineData, newLine]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-villa\",\n    children: /*#__PURE__*/_jsxDEV(Terminal, {\n      name: \"Thoughts Villa\",\n      colorMode: \"light\",\n      children: [terminalLineData, /*#__PURE__*/_jsxDEV(TerminalInput, {\n        onInput: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(ThoughtsVilla, \"joZsDS69DazQjGv57DngsZwYByQ=\");\n_c = ThoughtsVilla;\nexport default ThoughtsVilla;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsVilla\");","map":{"version":3,"names":["React","useState","Terminal","TerminalOutput","TerminalInput","jsxDEV","_jsxDEV","ThoughtsVilla","_s","thoughts","setThoughts","terminalLineData","setTerminalLineData","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInput","input","newLine","length","className","name","colorMode","onInput","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './ThoughtsVilla.css';\n\n// function ThoughtsVilla() {\n//   const [thought, setThought] = useState('');\n//   const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)'); // Starting with a dull color\n//   const [explosion, setExplosion] = useState(false);\n\n//   const handleThoughtChange = (e) => {\n//     const inputText = e.target.value;\n//     setThought(inputText);\n\n//     // Calculate the background color based on input length\n//     const inputLength = inputText.length;\n//     const maxLength = 100; // Define a max length for mapping\n//     const colorValue = Math.min(255, Math.floor((inputLength / maxLength) * 255));\n\n//     // Create a gradient from dull color to bright color\n//     const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n//     setBackgroundColor(newBackgroundColor);\n//   };\n\n//   const handleThoughtSubmit = (e) => {\n//     e.preventDefault();\n//     // Perform actions on submit, like saving the thought or transitioning the color\n//     // Add explosion animation here\n//     setExplosion(true);\n//     setTimeout(() => {\n//       setExplosion(false);\n//       setThought('');\n//       setBackgroundColor('rgb(169, 169, 169)'); // Reset background color to dull\n//     }, 1000); // Adjust the duration as needed\n//   };\n\n//   return (\n//     <div className=\"thoughts-villa\" style={{ backgroundColor: backgroundColor }}>\n//       <h1>Thoughts Villa</h1>\n//       <form onSubmit={handleThoughtSubmit}>\n//         <textarea\n//           value={thought}\n//           onChange={handleThoughtChange}\n//           placeholder=\"Type your thoughts here...\"\n//           className={`thought-input ${explosion ? 'explode' : ''}`}\n//         ></textarea>\n//         <button type=\"submit\" className=\"submit-button\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ThoughtsVilla;import React, { useState } from 'react';\nimport React, { useState } from 'react';\nimport Terminal, { TerminalOutput, TerminalInput } from 'react-terminal-ui';\nimport './ThoughtsVilla.css';\n\nfunction ThoughtsVilla() {\n  const [thoughts, setThoughts] = useState([]);\n  const [terminalLineData, setTerminalLineData] = useState([\n    <TerminalOutput key={0}>Enter your thoughts below:</TerminalOutput>,\n  ]);\n\n  const handleInput = (input) => {\n    const newLine = <TerminalOutput key={terminalLineData.length}>{input}</TerminalOutput>;\n    setThoughts([...thoughts, input]);\n    setTerminalLineData([...terminalLineData, newLine]);\n  };\n\n  return (\n    <div className=\"thoughts-villa\">\n      <Terminal name=\"Thoughts Villa\" colorMode=\"light\">\n        {terminalLineData}\n        <TerminalInput onInput={handleInput} />\n      </Terminal>\n    </div>\n  );\n}\n\nexport default ThoughtsVilla;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,IAAIC,cAAc,EAAEC,aAAa,QAAQ,mBAAmB;AAC3E,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,cACvDK,OAAA,CAACH,cAAc;IAAAU,QAAA,EAAS;EAA0B,GAA7B,CAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA4C,CAAC,CACpE,CAAC;EAEF,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,OAAO,gBAAGd,OAAA,CAACH,cAAc;MAAAU,QAAA,EAAgCM;IAAK,GAA/BR,gBAAgB,CAACU,MAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyB,CAAC;IACtFP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEU,KAAK,CAAC,CAAC;IACjCP,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAES,OAAO,CAAC,CAAC;EACrD,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAT,QAAA,eAC7BP,OAAA,CAACJ,QAAQ;MAACqB,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAC,OAAO;MAAAX,QAAA,GAC9CF,gBAAgB,eACjBL,OAAA,CAACF,aAAa;QAACqB,OAAO,EAAEP;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACT,EAAA,CApBQD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAsBtB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}