{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/Garden.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './Garden.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Garden({\n  plants,\n  moodMessage\n}) {\n  _s();\n  const containerRef = useRef(null);\n  const [radius, setRadius] = useState(0);\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const containerHeight = containerRef.current.offsetHeight;\n      setRadius(Math.min(containerWidth, containerHeight) / 2 - 20); // 20 for some padding\n    }\n  }, [plants.length]);\n  const angleStep = plants.length > 0 ? 2 * Math.PI / plants.length : 0;\n  const emotions = {\n    '🌻': 'Happy',\n    '🌵': 'Sad',\n    '🌺': 'Angry',\n    '🍀': 'Relaxed'\n  };\n  const calculatePosition = index => {\n    const angle = index * angleStep;\n    const x = radius * Math.cos(angle) + radius;\n    const y = radius * Math.sin(angle) + radius;\n    return {\n      left: `${x}px`,\n      top: `${y}px`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"garden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"garden-plants-container\",\n      ref: containerRef,\n      children: plants.length > 0 ? plants.map((plant, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"garden-plant\",\n        style: calculatePosition(index),\n        \"aria-label\": `Plant representing ${emotions[plant]}`,\n        children: [plant, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip\",\n          children: emotions[plant]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No plants to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"garden-mood-message\",\n      children: moodMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"garden-link\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Garden, \"1vT2wXzVMPIKx4a4ZrlrYiIWdRM=\");\n_c = Garden;\nexport default Garden;\nvar _c;\n$RefreshReg$(_c, \"Garden\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Garden","plants","moodMessage","_s","containerRef","radius","setRadius","current","containerWidth","offsetWidth","containerHeight","offsetHeight","Math","min","length","angleStep","PI","emotions","calculatePosition","index","angle","x","cos","y","sin","left","top","className","children","ref","map","plant","style","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/Garden.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './Garden.css';\n\nfunction Garden({ plants, moodMessage }) {\n  const containerRef = useRef(null);\n  const [radius, setRadius] = useState(0);\n  \n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.offsetWidth;\n      const containerHeight = containerRef.current.offsetHeight;\n      setRadius(Math.min(containerWidth, containerHeight) / 2 - 20); // 20 for some padding\n    }\n  }, [plants.length]);\n\n  const angleStep = plants.length > 0 ? (2 * Math.PI) / plants.length : 0;\n\n  const emotions = {\n    '🌻': 'Happy',\n    '🌵': 'Sad',\n    '🌺': 'Angry',\n    '🍀': 'Relaxed'\n  };\n\n  const calculatePosition = (index) => {\n    const angle = index * angleStep;\n    const x = radius * Math.cos(angle) + radius;\n    const y = radius * Math.sin(angle) + radius;\n    return { left: `${x}px`, top: `${y}px` };\n  };\n\n  return (\n    <div className=\"garden\">\n      <div className=\"garden-plants-container\" ref={containerRef}>\n        {plants.length > 0 ? (\n          plants.map((plant, index) => (\n            <span\n              key={index}\n              className=\"garden-plant\"\n              style={calculatePosition(index)}\n              aria-label={`Plant representing ${emotions[plant]}`}\n            >\n              {plant}\n              <div className=\"tooltip\">{emotions[plant]}</div>\n            </span>\n          ))\n        ) : (\n          <p>No plants to display</p>\n        )}\n      </div>\n      <p className=\"garden-mood-message\">{moodMessage}</p>\n      <p>\n        <a href=\"/\" className=\"garden-link\">Back to Home</a>\n      </p>\n    </div>\n  );\n}\n\nexport default Garden;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}