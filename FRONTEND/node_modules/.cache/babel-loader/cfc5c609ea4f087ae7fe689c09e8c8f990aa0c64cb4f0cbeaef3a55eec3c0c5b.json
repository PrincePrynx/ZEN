{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/ThoughtsVilla.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ThoughtsVilla.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThoughtsVilla({\n  addThought,\n  generateMotivationalMessage\n}) {\n  _s();\n  const [thought, setThought] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)');\n  const [explosion, setExplosion] = useState(false);\n  const navigate = useNavigate();\n  const handleThoughtChange = e => {\n    const inputText = e.target.value;\n    setThought(inputText);\n    const inputLength = inputText.length;\n    const maxLength = 800;\n    const colorValue = Math.min(255, Math.floor(inputLength / maxLength * 255));\n    const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n    setBackgroundColor(newBackgroundColor);\n  };\n  const handleThoughtSubmit = e => {\n    e.preventDefault();\n    if (thought.trim() === '') {\n      alert('Please enter a thought before letting it go.');\n      return;\n    }\n    addThought(thought); // Store the thought\n    generateMotivationalMessage(); // Generate a motivational message\n\n    setExplosion(true);\n    setTimeout(() => {\n      setExplosion(false);\n      setThought('');\n      setBackgroundColor('rgb(169, 169, 169)');\n      navigate('/motivation'); // Redirect to MotivationPage\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-villa\",\n    style: {\n      backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `thoughts-villa-title ${explosion ? 'fade-out' : ''}`,\n      children: \"Thoughts Villa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleThoughtSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: thought,\n        onChange: handleThoughtChange,\n        placeholder: \"Type your thoughts here...\",\n        className: `thought-input ${explosion ? 'explode' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"let it go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ThoughtsVilla, \"f3o0ipJekgdd5dvg5skNO9Qb9Gw=\", false, function () {\n  return [useNavigate];\n});\n_c = ThoughtsVilla;\nexport default ThoughtsVilla;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsVilla\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ThoughtsVilla","addThought","generateMotivationalMessage","_s","thought","setThought","backgroundColor","setBackgroundColor","explosion","setExplosion","navigate","handleThoughtChange","e","inputText","target","value","inputLength","length","maxLength","colorValue","Math","min","floor","newBackgroundColor","handleThoughtSubmit","preventDefault","trim","alert","setTimeout","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/ThoughtsVilla.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ThoughtsVilla.css';\n\nfunction ThoughtsVilla({ addThought, generateMotivationalMessage }) {\n  const [thought, setThought] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)');\n  const [explosion, setExplosion] = useState(false);\n  const navigate = useNavigate();\n\n  const handleThoughtChange = (e) => {\n    const inputText = e.target.value;\n    setThought(inputText);\n\n    const inputLength = inputText.length;\n    const maxLength = 800;\n    const colorValue = Math.min(255, Math.floor((inputLength / maxLength) * 255));\n\n    const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n    setBackgroundColor(newBackgroundColor);\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    if (thought.trim() === '') {\n      alert('Please enter a thought before letting it go.');\n      return;\n    }\n\n    addThought(thought); // Store the thought\n    generateMotivationalMessage(); // Generate a motivational message\n\n    setExplosion(true);\n    setTimeout(() => {\n      setExplosion(false);\n      setThought('');\n      setBackgroundColor('rgb(169, 169, 169)');\n      navigate('/motivation'); // Redirect to MotivationPage\n    }, 1000);\n  };\n\n  return (\n    <div className=\"thoughts-villa\" style={{ backgroundColor }}>\n      <h1 className={`thoughts-villa-title ${explosion ? 'fade-out' : ''}`}>Thoughts Villa</h1>\n      <form onSubmit={handleThoughtSubmit}>\n        <textarea\n          value={thought}\n          onChange={handleThoughtChange}\n          placeholder=\"Type your thoughts here...\"\n          className={`thought-input ${explosion ? 'explode' : ''}`}\n        ></textarea>\n        <button type=\"submit\" className=\"submit-button\">let it go</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ThoughtsVilla;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}