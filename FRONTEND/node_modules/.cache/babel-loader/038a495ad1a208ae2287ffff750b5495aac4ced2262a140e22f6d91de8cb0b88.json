{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ThoughtsVilla.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThoughtsVilla() {\n  _s();\n  const [thought, setThought] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)'); // Starting with a dull color\n  const [explosion, setExplosion] = useState(false);\n  const handleThoughtChange = e => {\n    const inputText = e.target.value;\n    setThought(inputText);\n\n    // Calculate the background color based on input length\n    const inputLength = inputText.length;\n    const maxLength = 800; // Define a max length for mapping\n    const colorValue = Math.min(255, Math.floor(inputLength / maxLength * 255));\n\n    // Create a gradient from dull color to bright color\n    const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n    setBackgroundColor(newBackgroundColor);\n  };\n  const handleThoughtSubmit = e => {\n    e.preventDefault();\n    // Perform actions on submit, like saving the thought or transitioning the color\n    // Add explosion animation here\n    setExplosion(true);\n    setTimeout(() => {\n      setExplosion(false);\n      setThought('');\n      setBackgroundColor('rgb(169, 169, 169)'); // Reset background color to dull\n    }, 1000); // Adjust the duration as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-villa\",\n    style: {\n      backgroundColor: backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Thoughts Villa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleThoughtSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: thought,\n        onChange: handleThoughtChange,\n        placeholder: \"Type your thoughts here...\",\n        className: `thought-input ${explosion ? 'explode' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ThoughtsVilla, \"7/dgf9Sh1koMhzFBs9LhFbkNx9E=\");\n_c = ThoughtsVilla;\nexport default ThoughtsVilla;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsVilla\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ThoughtsVilla","_s","thought","setThought","backgroundColor","setBackgroundColor","explosion","setExplosion","handleThoughtChange","e","inputText","target","value","inputLength","length","maxLength","colorValue","Math","min","floor","newBackgroundColor","handleThoughtSubmit","preventDefault","setTimeout","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ThoughtsVilla.css';\n\nfunction ThoughtsVilla() {\n  const [thought, setThought] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)'); // Starting with a dull color\n  const [explosion, setExplosion] = useState(false);\n\n  const handleThoughtChange = (e) => {\n    const inputText = e.target.value;\n    setThought(inputText);\n\n    // Calculate the background color based on input length\n    const inputLength = inputText.length;\n    const maxLength = 800; // Define a max length for mapping\n    const colorValue = Math.min(255, Math.floor((inputLength / maxLength) * 255));\n\n    // Create a gradient from dull color to bright color\n    const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n    setBackgroundColor(newBackgroundColor);\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    // Perform actions on submit, like saving the thought or transitioning the color\n    // Add explosion animation here\n    setExplosion(true);\n    setTimeout(() => {\n      setExplosion(false);\n      setThought('');\n      setBackgroundColor('rgb(169, 169, 169)'); // Reset background color to dull\n    }, 1000); // Adjust the duration as needed\n  };\n\n  return (\n    <div className=\"thoughts-villa\" style={{ backgroundColor: backgroundColor }}>\n      <h1>Thoughts Villa</h1>\n      <form onSubmit={handleThoughtSubmit}>\n        <textarea\n          value={thought}\n          onChange={handleThoughtChange}\n          placeholder=\"Type your thoughts here...\"\n          className={`thought-input ${explosion ? 'explode' : ''}`}\n        ></textarea>\n        <button type=\"submit\" className=\"submit-button\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ThoughtsVilla;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;EAC9E,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,mBAAmB,GAAIC,CAAC,IAAK;IACjC,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChCT,UAAU,CAACO,SAAS,CAAC;;IAErB;IACA,MAAMG,WAAW,GAAGH,SAAS,CAACI,MAAM;IACpC,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;IACvB,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEN,WAAW,GAAGE,SAAS,GAAI,GAAG,CAAC,CAAC;;IAE7E;IACA,MAAMK,kBAAkB,GAAG,OAAO,GAAG,GAAGJ,UAAU,KAAK,GAAG,GAAGA,UAAU,KAAK,GAAG,GAAGA,UAAU,GAAG;IAC/FX,kBAAkB,CAACe,kBAAkB,CAAC;EACxC,CAAC;EAED,MAAMC,mBAAmB,GAAIZ,CAAC,IAAK;IACjCA,CAAC,CAACa,cAAc,CAAC,CAAC;IAClB;IACA;IACAf,YAAY,CAAC,IAAI,CAAC;IAClBgB,UAAU,CAAC,MAAM;MACfhB,YAAY,CAAC,KAAK,CAAC;MACnBJ,UAAU,CAAC,EAAE,CAAC;MACdE,kBAAkB,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,oBACEN,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAErB,eAAe,EAAEA;IAAgB,CAAE;IAAAsB,QAAA,gBAC1E3B,OAAA;MAAA2B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/B,OAAA;MAAMgC,QAAQ,EAAEV,mBAAoB;MAAAK,QAAA,gBAClC3B,OAAA;QACEa,KAAK,EAAEV,OAAQ;QACf8B,QAAQ,EAAExB,mBAAoB;QAC9ByB,WAAW,EAAC,4BAA4B;QACxCT,SAAS,EAAE,iBAAiBlB,SAAS,GAAG,SAAS,GAAG,EAAE;MAAG;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACZ/B,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAACV,SAAS,EAAC,eAAe;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC7B,EAAA,CA7CQD,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AA+CtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}