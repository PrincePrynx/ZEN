{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Ensure this file exists\nimport MoodTracker from './components/MoodTracker'; // Import MoodTracker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('#ffffff'); // Default background color\n  const [thoughts, setThoughts] = useState([]); // Array to store user thoughts\n\n  // Function to handle text input\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInput(value);\n\n    // Change background color based on input length (example logic)\n    const color = value.length > 0 ? '#dff0d8' : '#ffffff'; // Change color if there's input\n    setBackgroundColor(color);\n  };\n\n  // Function to handle submission of thoughts\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Add the current input to the thoughts array\n    if (input.trim()) {\n      setThoughts([...thoughts, input]);\n\n      // Clear the input field after submission\n      setInput('');\n\n      // Reset background color\n      setBackgroundColor('#ffffff');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to ZEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your thoughts here...\",\n          rows: \"5\",\n          cols: \"30\",\n          style: {\n            resize: 'none',\n            padding: '10px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: [thoughts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Submitted Thoughts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: thought\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), input && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your thoughts have been noted!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoodTracker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZScRHjBaTaP2SXhsHbJpw1o2x4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoodTracker","jsxDEV","_jsxDEV","App","_s","input","setInput","backgroundColor","setBackgroundColor","thoughts","setThoughts","handleInputChange","event","value","target","color","length","handleSubmit","preventDefault","trim","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","rows","cols","resize","padding","fontSize","type","map","thought","index","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Ensure this file exists\nimport MoodTracker from './components/MoodTracker'; // Import MoodTracker\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('#ffffff'); // Default background color\n  const [thoughts, setThoughts] = useState([]); // Array to store user thoughts\n\n  // Function to handle text input\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    setInput(value);\n\n    // Change background color based on input length (example logic)\n    const color = value.length > 0 ? '#dff0d8' : '#ffffff'; // Change color if there's input\n    setBackgroundColor(color);\n  };\n\n  // Function to handle submission of thoughts\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Add the current input to the thoughts array\n    if (input.trim()) {\n      setThoughts([...thoughts, input]);\n\n      // Clear the input field after submission\n      setInput('');\n\n      // Reset background color\n      setBackgroundColor('#ffffff');\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ backgroundColor }}>\n      <header className=\"App-header\">\n        <h1>Welcome to ZEN</h1>\n        <form onSubmit={handleSubmit}>\n          <textarea\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"Type your thoughts here...\"\n            rows=\"5\"\n            cols=\"30\"\n            style={{ resize: 'none', padding: '10px', fontSize: '16px' }}\n          />\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <div className=\"feedback\">\n          {thoughts.length > 0 && (\n            <div>\n              <h2>Your Submitted Thoughts:</h2>\n              <ul>\n                {thoughts.map((thought, index) => (\n                  <li key={index}>{thought}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n          {input && <p>Your thoughts have been noted!</p>}\n        </div>\n        <MoodTracker /> {/* Use MoodTracker component */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}