{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/Garden.js\";\nimport React from 'react';\nimport './Garden.css';\n\n// Example plants data array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst plants = [{\n  emoji: '🌻',\n  emotion: 'Happy'\n}, {\n  emoji: '🌵',\n  emotion: 'Sad'\n}, {\n  emoji: '🌺',\n  emotion: 'Angry'\n}, {\n  emoji: '🍀',\n  emotion: 'Relaxed'\n}\n// Add more plants as needed\n];\nfunction Garden({\n  moodMessage\n}) {\n  const radius = 120; // Radius for the circle of emojis\n  const angleStep = 2 * Math.PI / Math.max(plants.length, 7); // Adjust angle step for circle formation\n\n  const calculatePosition = index => {\n    const angle = index * angleStep;\n    const x = radius * Math.cos(angle) + radius; // Center the circle horizontally\n    const y = radius * Math.sin(angle) + radius; // Center the circle vertically\n    return {\n      left: `${x}px`,\n      top: `${y}px`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"garden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plants-container\",\n      children: plants.map((plant, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"plant\",\n        style: calculatePosition(index),\n        \"data-emotion\": plant.emotion // Add data-emotion attribute\n        ,\n        children: plant.emoji\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mood-message\",\n      children: moodMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = Garden;\nexport default Garden;\nvar _c;\n$RefreshReg$(_c, \"Garden\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","plants","emoji","emotion","Garden","moodMessage","radius","angleStep","Math","PI","max","length","calculatePosition","index","angle","x","cos","y","sin","left","top","className","children","map","plant","style","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/Garden.js"],"sourcesContent":["import React from 'react';\nimport './Garden.css';\n\n// Example plants data array\nconst plants = [\n    { emoji: '🌻', emotion: 'Happy' },\n    { emoji: '🌵', emotion: 'Sad' },\n    { emoji: '🌺', emotion: 'Angry' },\n    { emoji: '🍀', emotion: 'Relaxed' },\n    // Add more plants as needed\n];\n\nfunction Garden({ moodMessage }) {\n    const radius = 120; // Radius for the circle of emojis\n    const angleStep = (2 * Math.PI) / Math.max(plants.length, 7); // Adjust angle step for circle formation\n\n    const calculatePosition = (index) => {\n        const angle = index * angleStep;\n        const x = radius * Math.cos(angle) + radius; // Center the circle horizontally\n        const y = radius * Math.sin(angle) + radius; // Center the circle vertically\n        return { left: `${x}px`, top: `${y}px` };\n    };\n\n    return (\n        <div className=\"garden\">\n            <div className=\"plants-container\">\n                {plants.map((plant, index) => (\n                    <span\n                        key={index}\n                        className=\"plant\"\n                        style={calculatePosition(index)}\n                        data-emotion={plant.emotion} // Add data-emotion attribute\n                    >\n                        {plant.emoji}\n                    </span>\n                ))}\n            </div>\n            <p className=\"mood-message\">{moodMessage}</p>\n            <p>\n                <a href=\"/\">Back to Home</a>\n            </p>\n        </div>\n    );\n}\n\nexport default Garden;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CACX;EAAEC,KAAK,EAAE,IAAI;EAAEC,OAAO,EAAE;AAAQ,CAAC,EACjC;EAAED,KAAK,EAAE,IAAI;EAAEC,OAAO,EAAE;AAAM,CAAC,EAC/B;EAAED,KAAK,EAAE,IAAI;EAAEC,OAAO,EAAE;AAAQ,CAAC,EACjC;EAAED,KAAK,EAAE,IAAI;EAAEC,OAAO,EAAE;AAAU;AAClC;AAAA,CACH;AAED,SAASC,MAAMA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAC7B,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;EACpB,MAAMC,SAAS,GAAI,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAID,IAAI,CAACE,GAAG,CAACT,MAAM,CAACU,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE9D,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAMC,KAAK,GAAGD,KAAK,GAAGN,SAAS;IAC/B,MAAMQ,CAAC,GAAGT,MAAM,GAAGE,IAAI,CAACQ,GAAG,CAACF,KAAK,CAAC,GAAGR,MAAM,CAAC,CAAC;IAC7C,MAAMW,CAAC,GAAGX,MAAM,GAAGE,IAAI,CAACU,GAAG,CAACJ,KAAK,CAAC,GAAGR,MAAM,CAAC,CAAC;IAC7C,OAAO;MAAEa,IAAI,EAAE,GAAGJ,CAAC,IAAI;MAAEK,GAAG,EAAE,GAAGH,CAAC;IAAK,CAAC;EAC5C,CAAC;EAED,oBACIjB,OAAA;IAAKqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBtB,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5BrB,MAAM,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEX,KAAK,kBACrBb,OAAA;QAEIqB,SAAS,EAAC,OAAO;QACjBI,KAAK,EAAEb,iBAAiB,CAACC,KAAK,CAAE;QAChC,gBAAcW,KAAK,CAACrB,OAAQ,CAAC;QAAA;QAAAmB,QAAA,EAE5BE,KAAK,CAACtB;MAAK,GALPW,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7B,OAAA;MAAGqB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEjB;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7C7B,OAAA;MAAAsB,QAAA,eACItB,OAAA;QAAG8B,IAAI,EAAC,GAAG;QAAAR,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACE,EAAA,GA/BQ3B,MAAM;AAiCf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}