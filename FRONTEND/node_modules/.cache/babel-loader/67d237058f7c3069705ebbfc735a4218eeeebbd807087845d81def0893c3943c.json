{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport ThoughtsVilla from './components/ThoughtsVilla';\nimport MoodTracker from './components/MoodTracker';\nimport Navbar from './components/Navbar';\nimport ThoughtsBacklog from './components/ThoughtsBacklog';\nimport MotivationalMessage from './components/MotivationalMessage';\nimport Garden from './components/Garden';\nimport ZenAnimation from './components/ZenAnimation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [thoughts, setThoughts] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [moodCount, setMoodCount] = useState({\n    happy: 0,\n    sad: 0,\n    angry: 0,\n    relaxed: 0\n  });\n  const [animationDone, setAnimationDone] = useState(false);\n  const addThought = thought => {\n    setThoughts(prevThoughts => [...prevThoughts, thought]);\n  };\n  const addPlant = (plant, mood) => {\n    setPlants(prevPlants => [...prevPlants, plant]);\n    setMoodCount(prevCount => ({\n      ...prevCount,\n      [mood]: prevCount[mood] + 1\n    }));\n  };\n  const getMostFrequentMood = () => {\n    const moods = Object.keys(moodCount);\n    let maxCount = 0;\n    let mostFrequentMood = '';\n    moods.forEach(mood => {\n      if (moodCount[mood] > maxCount) {\n        maxCount = moodCount[mood];\n        mostFrequentMood = mood;\n      }\n    });\n    return mostFrequentMood;\n  };\n  const getMoodMessage = () => {\n    const mood = getMostFrequentMood();\n    switch (mood) {\n      case 'happy':\n        return \"You've been feeling happy today! Keep up the positive vibes and spread joy to others.\";\n      case 'sad':\n        return \"You've been feeling sad today. It's okay to feel down; take some time to care for yourself.\";\n      case 'angry':\n        return \"You've been feeling angry today. Try to find a way to release that anger constructively.\";\n      case 'relaxed':\n        return \"You've been feeling relaxed today. Keep enjoying the calm and peace!\";\n      default:\n        return \"You've had a mix of emotions today. Remember, it's important to acknowledge and process how you feel.\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: !animationDone ? /*#__PURE__*/_jsxDEV(ZenAnimation, {\n        onAnimationEnd: () => setAnimationDone(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/thoughts-villa\",\n              element: /*#__PURE__*/_jsxDEV(ThoughtsVilla, {\n                addThought: addThought\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/mood-tracker\",\n              element: /*#__PURE__*/_jsxDEV(MoodTracker, {\n                addPlant: addPlant,\n                moodCount: moodCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/thoughts-backlog\",\n              element: /*#__PURE__*/_jsxDEV(ThoughtsBacklog, {\n                thoughts: thoughts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/motivational-message\",\n              element: /*#__PURE__*/_jsxDEV(MotivationalMessage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/garden\",\n              element: /*#__PURE__*/_jsxDEV(Garden, {\n                plants: plants,\n                moodMessage: getMoodMessage()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"OQdYonh9Wg7l0esEUf7pQNrdXSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","HomePage","ThoughtsVilla","MoodTracker","Navbar","ThoughtsBacklog","MotivationalMessage","Garden","ZenAnimation","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","thoughts","setThoughts","plants","setPlants","moodCount","setMoodCount","happy","sad","angry","relaxed","animationDone","setAnimationDone","addThought","thought","prevThoughts","addPlant","plant","mood","prevPlants","prevCount","getMostFrequentMood","moods","Object","keys","maxCount","mostFrequentMood","forEach","getMoodMessage","children","className","onAnimationEnd","fileName","_jsxFileName","lineNumber","columnNumber","path","element","moodMessage","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport ThoughtsVilla from './components/ThoughtsVilla';\nimport MoodTracker from './components/MoodTracker';\nimport Navbar from './components/Navbar';\nimport ThoughtsBacklog from './components/ThoughtsBacklog';\nimport MotivationalMessage from './components/MotivationalMessage';\nimport Garden from './components/Garden';\nimport ZenAnimation from './components/ZenAnimation';\nfunction App() {\n    const [thoughts, setThoughts] = useState([]);\n    const [plants, setPlants] = useState([]);\n    const [moodCount, setMoodCount] = useState({ happy: 0, sad: 0, angry: 0, relaxed: 0 });\n    const [animationDone, setAnimationDone] = useState(false);\n  \n    const addThought = (thought) => {\n      setThoughts((prevThoughts) => [...prevThoughts, thought]);\n    };\n  \n    const addPlant = (plant, mood) => {\n      setPlants((prevPlants) => [...prevPlants, plant]);\n      setMoodCount((prevCount) => ({ ...prevCount, [mood]: prevCount[mood] + 1 }));\n    };\n  \n    const getMostFrequentMood = () => {\n      const moods = Object.keys(moodCount);\n      let maxCount = 0;\n      let mostFrequentMood = '';\n  \n      moods.forEach((mood) => {\n        if (moodCount[mood] > maxCount) {\n          maxCount = moodCount[mood];\n          mostFrequentMood = mood;\n        }\n      });\n  \n      return mostFrequentMood;\n    };\n  \n    const getMoodMessage = () => {\n      const mood = getMostFrequentMood();\n      switch (mood) {\n        case 'happy':\n          return \"You've been feeling happy today! Keep up the positive vibes and spread joy to others.\";\n        case 'sad':\n          return \"You've been feeling sad today. It's okay to feel down; take some time to care for yourself.\";\n        case 'angry':\n          return \"You've been feeling angry today. Try to find a way to release that anger constructively.\";\n        case 'relaxed':\n          return \"You've been feeling relaxed today. Keep enjoying the calm and peace!\";\n        default:\n          return \"You've had a mix of emotions today. Remember, it's important to acknowledge and process how you feel.\";\n      }\n    };\n  \n    return (\n      <Router>\n        <div className=\"App\">\n          {!animationDone ? (\n            <ZenAnimation onAnimationEnd={() => setAnimationDone(true)} />\n          ) : (\n            <>\n              <Navbar />\n              <div className=\"content\">\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"/thoughts-villa\" element={<ThoughtsVilla addThought={addThought} />} />\n                  <Route path=\"/mood-tracker\" element={<MoodTracker addPlant={addPlant} moodCount={moodCount} />} />\n                  <Route path=\"/thoughts-backlog\" element={<ThoughtsBacklog thoughts={thoughts} />} />\n                  <Route path=\"/motivational-message\" element={<MotivationalMessage />} />\n                  <Route path=\"/garden\" element={<Garden plants={plants} moodMessage={getMoodMessage()} />} />\n                </Routes>\n              </div>\n            </>\n          )}\n        </div>\n      </Router>\n    );\n  }\n  \n  export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}