{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/MotivationalMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MotivationalMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messages = [\n  // ... (same as before)\n];\nfunction getRandomMessage() {\n  return messages[Math.floor(Math.random() * messages.length)];\n}\nfunction MotivationalMessage() {\n  _s();\n  const navigate = useNavigate();\n  const [displayedMessage, setDisplayedMessage] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(true);\n  const message = useMemo(getRandomMessage, []);\n  useEffect(() => {\n    if (!isTyping) return;\n    const words = message.split(\" \");\n    const interval = setInterval(() => {\n      setDisplayedMessage(prev => {\n        const newMessage = prev + (prev ? \" \" : \"\") + words[wordIndex];\n        if (wordIndex + 1 >= words.length) {\n          setIsTyping(false); // Stop typing\n          clearInterval(interval);\n        }\n        return newMessage;\n      });\n      setWordIndex(prev => prev + 1);\n    }, 400); // Adjust typing speed (in milliseconds) here\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, [isTyping, wordIndex, message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"motivational-message-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"motivational-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-animation\",\n        children: [displayedMessage, isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/thoughts-backlog'),\n          children: \"View Backlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(MotivationalMessage, \"hdVmqHU9xEh+yAtyeBfNTw2OMbQ=\", false, function () {\n  return [useNavigate];\n});\n_c = MotivationalMessage;\nexport default MotivationalMessage;\nvar _c;\n$RefreshReg$(_c, \"MotivationalMessage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","jsxDEV","_jsxDEV","messages","getRandomMessage","Math","floor","random","length","MotivationalMessage","_s","navigate","displayedMessage","setDisplayedMessage","wordIndex","setWordIndex","isTyping","setIsTyping","message","words","split","interval","setInterval","prev","newMessage","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/MotivationalMessage.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MotivationalMessage.css';\n\nconst messages = [\n  // ... (same as before)\n];\n\nfunction getRandomMessage() {\n  return messages[Math.floor(Math.random() * messages.length)];\n}\n\nfunction MotivationalMessage() {\n  const navigate = useNavigate();\n  const [displayedMessage, setDisplayedMessage] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(0);\n  const [isTyping, setIsTyping] = useState(true);\n  const message = useMemo(getRandomMessage, []);\n\n  useEffect(() => {\n    if (!isTyping) return;\n\n    const words = message.split(\" \");\n    \n    const interval = setInterval(() => {\n      setDisplayedMessage(prev => {\n        const newMessage = prev + (prev ? \" \" : \"\") + words[wordIndex];\n        if (wordIndex + 1 >= words.length) {\n          setIsTyping(false); // Stop typing\n          clearInterval(interval);\n        }\n        return newMessage;\n      });\n      setWordIndex(prev => prev + 1);\n    }, 400); // Adjust typing speed (in milliseconds) here\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, [isTyping, wordIndex, message]);\n\n  return (\n    <div className=\"motivational-message-container\">\n      <div className=\"motivational-message\">\n        <div className=\"typing-animation\">\n          {displayedMessage}\n          {isTyping && <span className=\"cursor\">|</span>}\n        </div>\n        <div className=\"button-container\">\n          <button onClick={() => navigate('/thoughts-backlog')}>View Backlog</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MotivationalMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAQ,GAAG;EACf;AAAA,CACD;AAED,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,OAAOD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAAC,CAAC;AAC9D;AAEA,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMoB,OAAO,GAAGnB,OAAO,CAACK,gBAAgB,EAAE,EAAE,CAAC;EAE7CP,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,QAAQ,EAAE;IAEf,MAAMG,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;IAEhC,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCT,mBAAmB,CAACU,IAAI,IAAI;QAC1B,MAAMC,UAAU,GAAGD,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGJ,KAAK,CAACL,SAAS,CAAC;QAC9D,IAAIA,SAAS,GAAG,CAAC,IAAIK,KAAK,CAACX,MAAM,EAAE;UACjCS,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;UACpBQ,aAAa,CAACJ,QAAQ,CAAC;QACzB;QACA,OAAOG,UAAU;MACnB,CAAC,CAAC;MACFT,YAAY,CAACQ,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAChC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACL,QAAQ,EAAEF,SAAS,EAAEI,OAAO,CAAC,CAAC;EAElC,oBACEhB,OAAA;IAAKwB,SAAS,EAAC,gCAAgC;IAAAC,QAAA,eAC7CzB,OAAA;MAAKwB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCzB,OAAA;QAAKwB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAC9Bf,gBAAgB,EAChBI,QAAQ,iBAAId,OAAA;UAAMwB,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACN7B,OAAA;QAAKwB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BzB,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,mBAAmB,CAAE;UAAAgB,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAxCQD,mBAAmB;EAAA,QACTT,WAAW;AAAA;AAAAiC,EAAA,GADrBxB,mBAAmB;AA0C5B,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}