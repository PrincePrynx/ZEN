{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './ThoughtsVilla.css';\n\n// const calculateColor = (inputLength) => {\n//   const minColor = 200;\n//   const maxColor = 255;\n\n//   const colorValue = Math.min(Math.max(inputLength * 10, minColor), maxColor);\n//   return `rgb(${255 - colorValue}, ${colorValue}, ${100 + colorValue / 2})`;\n// };\n\n// function ThoughtsVilla() {\n//   const [thought, setThought] = useState('');\n//   const [backgroundColor, setBackgroundColor] = useState('#ffffff');\n\n//   const handleThoughtChange = (event) => {\n//     const input = event.target.value;\n//     setThought(input);\n//     const color = calculateColor(input.length);\n//     setBackgroundColor(color);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (thought.trim()) {\n//       console.log('Thought submitted:', thought);\n//       setThought('');\n//       setBackgroundColor('#ffffff');\n//     } else {\n//       console.log('Please enter a thought before submitting.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"thoughts-villa\" style={{ backgroundColor }}>\n//       <h1>Thoughts Villa</h1>\n//       <form onSubmit={handleSubmit}>\n//         <textarea\n//           value={thought}\n//           onChange={handleThoughtChange}\n//           placeholder=\"Type your thoughts here...\"\n//           rows=\"4\"\n//           cols=\"50\"\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ThoughtsVilla;\n\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThoughtsVilla = () => {\n  _s();\n  const [thought, setThought] = useState('');\n  const {\n    setBackgroundColor,\n    addThought\n  } = useContext(AppContext);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Update background color based on thought entry\n    setBackgroundColor('happy');\n    // Add thought to backend\n    await fetch('http://localhost:5000/api/thoughts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        thought\n      })\n    });\n    // Update local context\n    addThought(thought);\n    // Clear input field\n    setThought('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ThoughtVilla\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Your Thoughts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: thought,\n        onChange: e => setThought(e.target.value),\n        rows: \"5\",\n        placeholder: \"Type your thoughts here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtsVilla, \"19cwKyOezrcuIVHN1qCPAWVxhms=\");\n_c = ThoughtsVilla;\nexport default ThoughtsVilla;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsVilla\");","map":{"version":3,"names":["React","useState","useContext","AppContext","jsxDEV","_jsxDEV","ThoughtsVilla","_s","thought","setThought","setBackgroundColor","addThought","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","rows","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './ThoughtsVilla.css';\n\n// const calculateColor = (inputLength) => {\n//   const minColor = 200;\n//   const maxColor = 255;\n\n//   const colorValue = Math.min(Math.max(inputLength * 10, minColor), maxColor);\n//   return `rgb(${255 - colorValue}, ${colorValue}, ${100 + colorValue / 2})`;\n// };\n\n// function ThoughtsVilla() {\n//   const [thought, setThought] = useState('');\n//   const [backgroundColor, setBackgroundColor] = useState('#ffffff');\n\n//   const handleThoughtChange = (event) => {\n//     const input = event.target.value;\n//     setThought(input);\n//     const color = calculateColor(input.length);\n//     setBackgroundColor(color);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     if (thought.trim()) {\n//       console.log('Thought submitted:', thought);\n//       setThought('');\n//       setBackgroundColor('#ffffff');\n//     } else {\n//       console.log('Please enter a thought before submitting.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"thoughts-villa\" style={{ backgroundColor }}>\n//       <h1>Thoughts Villa</h1>\n//       <form onSubmit={handleSubmit}>\n//         <textarea\n//           value={thought}\n//           onChange={handleThoughtChange}\n//           placeholder=\"Type your thoughts here...\"\n//           rows=\"4\"\n//           cols=\"50\"\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ThoughtsVilla;\n\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst ThoughtsVilla = () => {\n  const [thought, setThought] = useState('');\n  const { setBackgroundColor, addThought } = useContext(AppContext);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Update background color based on thought entry\n    setBackgroundColor('happy');\n    // Add thought to backend\n    await fetch('http://localhost:5000/api/thoughts', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ thought })\n    });\n    // Update local context\n    addThought(thought);\n    // Clear input field\n    setThought('');\n  };\n\n  return (\n    <div className=\"ThoughtVilla\">\n      <h2>Enter Your Thoughts</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={thought}\n          onChange={(e) => setThought(e.target.value)}\n          rows=\"5\"\n          placeholder=\"Type your thoughts here...\"\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtsVilla;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAES,kBAAkB;IAAEC;EAAW,CAAC,GAAGT,UAAU,CAACC,UAAU,CAAC;EAEjE,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAJ,kBAAkB,CAAC,OAAO,CAAC;IAC3B;IACA,MAAMK,KAAK,CAAC,oCAAoC,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ;MAAQ,CAAC;IAClC,CAAC,CAAC;IACF;IACAG,UAAU,CAACH,OAAO,CAAC;IACnB;IACAC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA;MAAMsB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BjB,OAAA;QACEuB,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGhB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC5CG,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC;MAA4B;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFrB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CAlCID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}