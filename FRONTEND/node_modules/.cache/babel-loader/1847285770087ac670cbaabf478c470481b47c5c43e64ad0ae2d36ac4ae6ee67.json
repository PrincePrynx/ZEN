{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/Garden.js\";\nimport React from 'react';\nimport './Garden.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Garden({\n  plants,\n  moodMessage\n}) {\n  const containerSize = 300; // Container width and height\n  const circleRadius = containerSize / 2 - 20; // Radius of the circle, adjusting for padding\n  const angleIncrement = 360 / plants.length; // Angle between each emoji\n\n  // Function to calculate the style for each emoji based on its index\n  const getEmojiStyle = index => {\n    const angle = angleIncrement * index; // Current angle\n    const radians = angle * Math.PI / 180; // Convert angle to radians\n    const x = Math.cos(radians) * circleRadius; // X position\n    const y = Math.sin(radians) * circleRadius; // Y position\n\n    return {\n      left: `calc(50% + ${x}px)`,\n      // Centered horizontally\n      top: `calc(50% + ${y}px)` // Centered vertically\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"garden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plants-container\",\n      children: plants.map((plant, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"plant\",\n        style: getEmojiStyle(index),\n        \"data-emotion\": plant.emotion // Add data-emotion attribute\n        ,\n        children: plant.emoji\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mood-message\",\n      children: moodMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Garden;\nexport default Garden;\nvar _c;\n$RefreshReg$(_c, \"Garden\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Garden","plants","moodMessage","containerSize","circleRadius","angleIncrement","length","getEmojiStyle","index","angle","radians","Math","PI","x","cos","y","sin","left","top","className","children","map","plant","style","emotion","emoji","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/Garden.js"],"sourcesContent":["import React from 'react';\nimport './Garden.css';\n\nfunction Garden({ plants, moodMessage }) {\n  const containerSize = 300; // Container width and height\n  const circleRadius = containerSize / 2 - 20; // Radius of the circle, adjusting for padding\n  const angleIncrement = 360 / plants.length; // Angle between each emoji\n\n  // Function to calculate the style for each emoji based on its index\n  const getEmojiStyle = (index) => {\n    const angle = angleIncrement * index; // Current angle\n    const radians = (angle * Math.PI) / 180; // Convert angle to radians\n    const x = Math.cos(radians) * circleRadius; // X position\n    const y = Math.sin(radians) * circleRadius; // Y position\n\n    return {\n      left: `calc(50% + ${x}px)`, // Centered horizontally\n      top: `calc(50% + ${y}px)`, // Centered vertically\n    };\n  };\n\n  return (\n    <div className=\"garden\">\n      <div className=\"plants-container\">\n        {plants.map((plant, index) => (\n          <span\n            key={index}\n            className=\"plant\"\n            style={getEmojiStyle(index)}\n            data-emotion={plant.emotion} // Add data-emotion attribute\n          >\n            {plant.emoji}\n          </span>\n        ))}\n      </div>\n      <p className=\"mood-message\">{moodMessage}</p>\n      <p>\n        <a href=\"/\">Back to Home</a>\n      </p>\n    </div>\n  );\n}\n\nexport default Garden;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,EAAE;EACvC,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;EAC3B,MAAMC,YAAY,GAAGD,aAAa,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;EAC7C,MAAME,cAAc,GAAG,GAAG,GAAGJ,MAAM,CAACK,MAAM,CAAC,CAAC;;EAE5C;EACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAMC,KAAK,GAAGJ,cAAc,GAAGG,KAAK,CAAC,CAAC;IACtC,MAAME,OAAO,GAAID,KAAK,GAAGE,IAAI,CAACC,EAAE,GAAI,GAAG,CAAC,CAAC;IACzC,MAAMC,CAAC,GAAGF,IAAI,CAACG,GAAG,CAACJ,OAAO,CAAC,GAAGN,YAAY,CAAC,CAAC;IAC5C,MAAMW,CAAC,GAAGJ,IAAI,CAACK,GAAG,CAACN,OAAO,CAAC,GAAGN,YAAY,CAAC,CAAC;;IAE5C,OAAO;MACLa,IAAI,EAAE,cAAcJ,CAAC,KAAK;MAAE;MAC5BK,GAAG,EAAE,cAAcH,CAAC,KAAK,CAAE;IAC7B,CAAC;EACH,CAAC;EAED,oBACEhB,OAAA;IAAKoB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBrB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BnB,MAAM,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEd,KAAK,kBACvBT,OAAA;QAEEoB,SAAS,EAAC,OAAO;QACjBI,KAAK,EAAEhB,aAAa,CAACC,KAAK,CAAE;QAC5B,gBAAcc,KAAK,CAACE,OAAQ,CAAC;QAAA;QAAAJ,QAAA,EAE5BE,KAAK,CAACG;MAAK,GALPjB,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAGoB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAElB;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7C9B,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAG+B,IAAI,EAAC,GAAG;QAAAV,QAAA,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACE,EAAA,GAtCQ/B,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}