{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MoodTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodTracker({\n  addPlant\n}) {\n  _s();\n  const [mood, setMood] = useState('');\n  const navigate = useNavigate();\n  const handleMoodSelect = (selectedMood, plant) => {\n    setMood(selectedMood);\n    addPlant(plant); // This adds the plant to the garden\n  };\n  const getBackgroundColor = () => {\n    switch (mood) {\n      case 'happy':\n        return 'lightgreen';\n      case 'sad':\n        return 'lightblue';\n      case 'angry':\n        return 'lightcoral';\n      case 'relaxed':\n        return 'lightyellow';\n      default:\n        return 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    style: {\n      backgroundColor: getBackgroundColor()\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MOOD TRACKER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"how are you feeling at the moment?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('happy', '🌻'),\n        children: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('sad', '🌵'),\n        children: \"Sad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('angry', '🌺'),\n        children: \"Angry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('relaxed', '🍀'),\n        children: \"Relaxed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-garden\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/garden'),\n        children: \"view your garden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(MoodTracker, \"SL37pjR4BBtC7MW0wL7KfBNcktE=\", false, function () {\n  return [useNavigate];\n});\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","MoodTracker","addPlant","_s","mood","setMood","navigate","handleMoodSelect","selectedMood","plant","getBackgroundColor","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MoodTracker.css';\n\nfunction MoodTracker({ addPlant }) {\n    const [mood, setMood] = useState('');\nconst navigate = useNavigate ();\n    const handleMoodSelect = (selectedMood, plant) => {\n        setMood(selectedMood);\n        addPlant(plant); // This adds the plant to the garden\n    };\n\n    const getBackgroundColor = () => {\n        switch (mood) {\n            case 'happy':\n                return 'lightgreen';\n            case 'sad':\n                return 'lightblue';\n            case 'angry':\n                return 'lightcoral';\n            case 'relaxed':\n                return 'lightyellow';\n            default:\n                return 'white';\n        }\n    };\n\n    return (\n        <div className=\"mood-tracker\" style={{ backgroundColor: getBackgroundColor() }}>\n            <h1>MOOD TRACKER</h1>\n            <p>how are you feeling at the moment?</p>\n            <div className=\"mood-options\">\n                <button onClick={() => handleMoodSelect('happy', '🌻')}>Happy</button>\n                <button onClick={() => handleMoodSelect('sad', '🌵')}>Sad</button>\n                <button onClick={() => handleMoodSelect('angry', '🌺')}>Angry</button>\n                <button onClick={() => handleMoodSelect('relaxed', '🍀')}>Relaxed</button>\n            </div>\n            <div className=\"view-garden\" >\n                 <button onClick={() => navigate('/garden')}>view your garden</button>\n                {/* <a href=\"/garden\">View Your Garden</a> */}\n\n            </div>\n        </div>\n    );\n}\n\nexport default MoodTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}