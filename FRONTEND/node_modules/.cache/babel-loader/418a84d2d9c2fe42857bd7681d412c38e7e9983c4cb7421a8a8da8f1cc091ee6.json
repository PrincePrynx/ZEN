{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/components/MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Garden from './Garden';\nimport './MoodTracker.css'; // Create this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodTracker() {\n  _s();\n  // State to store mood entries and current mood\n  const [mood, setMood] = useState('');\n  const [moodEntries, setMoodEntries] = useState([]);\n\n  // Function to handle mood input change\n  const handleMoodChange = event => {\n    setMood(event.target.value);\n  };\n\n  // Function to handle mood submission\n  const handleMoodSubmit = event => {\n    event.preventDefault();\n    if (mood) {\n      setMoodEntries([...moodEntries, mood]);\n      setMood(''); // Clear the input after submission\n    }\n  };\n\n  // Function to determine plant type based on mood\n  const getPlantType = mood => {\n    switch (mood) {\n      case 'Happy':\n        return 'ðŸŒ»';\n      // Sunflower for happy mood\n      case 'Sad':\n        return 'ðŸŒµ';\n      // Cactus for sad mood\n      case 'Angry':\n        return 'ðŸŒ²';\n      // Pine tree for angry mood\n      case 'Calm':\n        return 'ðŸŒ¿';\n      // Fern for calm mood\n      default:\n        return 'ðŸŒ±';\n      // Default plant\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mood Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleMoodSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: mood,\n        onChange: handleMoodChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select your mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Happy\",\n          children: \"Happy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sad\",\n          children: \"Sad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Angry\",\n          children: \"Angry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Calm\",\n          children: \"Calm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Mood Garden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-plants\",\n        children: moodEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-plant\",\n          children: getPlantType(entry)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodTracker, \"K3lzBet2xSlkbm/ONHxUn7ZHpbA=\");\n_c = MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","Garden","jsxDEV","_jsxDEV","MoodTracker","_s","mood","setMood","moodEntries","setMoodEntries","handleMoodChange","event","target","value","handleMoodSubmit","preventDefault","getPlantType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","map","entry","index","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Garden from './Garden';\nimport './MoodTracker.css'; // Create this CSS file for styling\n\n\nfunction MoodTracker() {\n  // State to store mood entries and current mood\n  const [mood, setMood] = useState('');\n  const [moodEntries, setMoodEntries] = useState([]);\n\n  // Function to handle mood input change\n  const handleMoodChange = (event) => {\n    setMood(event.target.value);\n  };\n\n  // Function to handle mood submission\n  const handleMoodSubmit = (event) => {\n    event.preventDefault();\n    if (mood) {\n      setMoodEntries([...moodEntries, mood]);\n      setMood(''); // Clear the input after submission\n    }\n  };\n\n  // Function to determine plant type based on mood\n  const getPlantType = (mood) => {\n    switch (mood) {\n      case 'Happy':\n        return 'ðŸŒ»'; // Sunflower for happy mood\n      case 'Sad':\n        return 'ðŸŒµ'; // Cactus for sad mood\n      case 'Angry':\n        return 'ðŸŒ²'; // Pine tree for angry mood\n      case 'Calm':\n        return 'ðŸŒ¿'; // Fern for calm mood\n      default:\n        return 'ðŸŒ±'; // Default plant\n    }\n  };\n\n  return (\n    <div className=\"mood-tracker\">\n      <h2>Mood Tracker</h2>\n      <form onSubmit={handleMoodSubmit}>\n        <select value={mood} onChange={handleMoodChange}>\n          <option value=\"\">Select your mood</option>\n          <option value=\"Happy\">Happy</option>\n          <option value=\"Sad\">Sad</option>\n          <option value=\"Angry\">Angry</option>\n          <option value=\"Calm\">Calm</option>\n        </select>\n        <button type=\"submit\">Log Mood</button>\n      </form>\n      <div className=\"mood-display\">\n        <h3>Your Mood Garden</h3>\n        <div className=\"mood-plants\">\n          {moodEntries.map((entry, index) => (\n            <span key={index} className=\"mood-plant\">\n              {getPlantType(entry)}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}