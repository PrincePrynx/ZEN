{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Ensure this file includes the animation CSS\nimport MoodTracker from './components/MoodTracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [input, setInput] = React.useState('');\n  const [backgroundColor, setBackgroundColor] = React.useState('#d3d3d3'); // Default color\n  const [thoughts, setThoughts] = React.useState([]);\n  const [animationClass, setAnimationClass] = React.useState('');\n  const [showExplode, setShowExplode] = React.useState(false);\n  const handleInputChange = event => {\n    const value = event.target.value;\n    setInput(value);\n    const color = calculateBackgroundColor(value.length);\n    setBackgroundColor(color);\n  };\n  const calculateBackgroundColor = length => {\n    const maxLength = 100;\n    const ratio = Math.min(length / maxLength, 1);\n    const gray = Math.floor(211 * (1 - ratio));\n    const yellow = Math.floor(255 * ratio);\n    return `rgb(${gray}, ${yellow}, ${0})`;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim()) {\n      setAnimationClass('explode');\n      setShowExplode(true);\n      setTimeout(() => {\n        setThoughts([...thoughts, input]);\n        setInput('');\n        setBackgroundColor('#d3d3d3');\n        setAnimationClass('evaporate');\n        setShowExplode(false);\n      }, 1000); // Match duration of the explode animation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor,\n      height: '100vh',\n      margin: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to ZEN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textarea-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type your thoughts here...\",\n          rows: \"5\",\n          cols: \"30\",\n          style: {\n            resize: 'none',\n            padding: '10px',\n            fontSize: '16px',\n            zIndex: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), showExplode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `textarea-explode ${animationClass}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `feedback ${animationClass}`,\n      children: [thoughts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Submitted Thoughts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: thought\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), input && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your thoughts have been noted!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoodTracker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"TUYeGmUPRFSJg9TN6r0AaGAXmnw=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","MoodTracker","jsxDEV","_jsxDEV","HomePage","_s","input","setInput","backgroundColor","setBackgroundColor","thoughts","setThoughts","animationClass","setAnimationClass","showExplode","setShowExplode","handleInputChange","event","value","target","color","calculateBackgroundColor","length","maxLength","ratio","Math","min","gray","floor","yellow","handleSubmit","preventDefault","trim","setTimeout","style","height","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","position","className","onChange","placeholder","rows","cols","resize","padding","fontSize","zIndex","type","map","thought","index","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Ensure this file includes the animation CSS\nimport MoodTracker from './components/MoodTracker';\nfunction HomePage() {\n  const [input, setInput] = React.useState('');\n  const [backgroundColor, setBackgroundColor] = React.useState('#d3d3d3'); // Default color\n  const [thoughts, setThoughts] = React.useState([]);\n  const [animationClass, setAnimationClass] = React.useState('');\n  const [showExplode, setShowExplode] = React.useState(false);\n\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    setInput(value);\n    const color = calculateBackgroundColor(value.length);\n    setBackgroundColor(color);\n  };\n\n  const calculateBackgroundColor = (length) => {\n    const maxLength = 100;\n    const ratio = Math.min(length / maxLength, 1);\n    const gray = Math.floor(211 * (1 - ratio));\n    const yellow = Math.floor(255 * ratio);\n    return `rgb(${gray}, ${yellow}, ${0})`;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (input.trim()) {\n      setAnimationClass('explode');\n      setShowExplode(true);\n      setTimeout(() => {\n        setThoughts([...thoughts, input]);\n        setInput('');\n        setBackgroundColor('#d3d3d3');\n        setAnimationClass('evaporate');\n        setShowExplode(false);\n      }, 1000); // Match duration of the explode animation\n    }\n  };\n\n  return (\n    <div style={{ backgroundColor, height: '100vh', margin: 0 }}>\n      <h1>Welcome to ZEN</h1>\n      <form onSubmit={handleSubmit} style={{ position: 'relative' }}>\n        <div className=\"textarea-container\">\n          <textarea\n            value={input}\n            onChange={handleInputChange}\n            placeholder=\"Type your thoughts here...\"\n            rows=\"5\"\n            cols=\"30\"\n            style={{ resize: 'none', padding: '10px', fontSize: '16px', zIndex: 2 }}\n          />\n          {showExplode && (\n            <div className={`textarea-explode ${animationClass}`} />\n          )}\n        </div>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div className={`feedback ${animationClass}`}>\n        {thoughts.length > 0 && (\n          <div>\n            <h2>Your Submitted Thoughts:</h2>\n            <ul>\n              {thoughts.map((thought, index) => (\n                <li key={index}>{thought}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {input && <p>Your thoughts have been noted!</p>}\n      </div>\n      <MoodTracker /> {/* Include the MoodTracker component */}\n    </div>\n  );\n}\n\nexport default HomePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}