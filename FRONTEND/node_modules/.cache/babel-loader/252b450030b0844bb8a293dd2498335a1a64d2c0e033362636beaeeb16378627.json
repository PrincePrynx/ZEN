{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './ThoughtsVilla.css';\n\n// function ThoughtsVilla() {\n//   const [thought, setThought] = useState('');\n//   const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)'); // Starting with a dull color\n//   const [explosion, setExplosion] = useState(false);\n\n//   const handleThoughtChange = (e) => {\n//     const inputText = e.target.value;\n//     setThought(inputText);\n\n//     // Calculate the background color based on input length\n//     const inputLength = inputText.length;\n//     const maxLength = 100; // Define a max length for mapping\n//     const colorValue = Math.min(255, Math.floor((inputLength / maxLength) * 255));\n\n//     // Create a gradient from dull color to bright color\n//     const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n//     setBackgroundColor(newBackgroundColor);\n//   };\n\n//   const handleThoughtSubmit = (e) => {\n//     e.preventDefault();\n//     // Perform actions on submit, like saving the thought or transitioning the color\n//     // Add explosion animation here\n//     setExplosion(true);\n//     setTimeout(() => {\n//       setExplosion(false);\n//       setThought('');\n//       setBackgroundColor('rgb(169, 169, 169)'); // Reset background color to dull\n//     }, 1000); // Adjust the duration as needed\n//   };\n\n//   return (\n//     <div className=\"thoughts-villa\" style={{ backgroundColor: backgroundColor }}>\n//       <h1>Thoughts Villa</h1>\n//       <form onSubmit={handleThoughtSubmit}>\n//         <textarea\n//           value={thought}\n//           onChange={handleThoughtChange}\n//           placeholder=\"Type your thoughts here...\"\n//           className={`thought-input ${explosion ? 'explode' : ''}`}\n//         ></textarea>\n//         <button type=\"submit\" className=\"submit-button\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ThoughtsVilla;\n\nimport React, { useState } from 'react';\nimport Terminal, { LineType } from 'react-terminal-ui';\nimport './ThoughtsVilla.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThoughtsVilla() {\n  _s();\n  const [thoughts, setThoughts] = useState([]);\n  const [terminalLineData, setTerminalLineData] = useState([{\n    type: LineType.Output,\n    value: 'Enter your thoughts below:'\n  }]);\n  const handleInput = input => {\n    const newLine = {\n      type: LineType.Output,\n      value: input\n    };\n    setThoughts([...thoughts, input]);\n    setTerminalLineData([...terminalLineData, newLine, {\n      type: LineType.Input,\n      prompt: '>',\n      value: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-villa\",\n    children: /*#__PURE__*/_jsxDEV(Terminal, {\n      name: \"Thoughts Villa\",\n      colorMode: \"light\",\n      lineData: terminalLineData,\n      onInput: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(ThoughtsVilla, \"ITbS9ionZ5Ez/e6VmPG3jlFz1sc=\");\n_c = ThoughtsVilla;\nexport default ThoughtsVilla;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsVilla\");","map":{"version":3,"names":["React","useState","Terminal","LineType","jsxDEV","_jsxDEV","ThoughtsVilla","_s","thoughts","setThoughts","terminalLineData","setTerminalLineData","type","Output","value","handleInput","input","newLine","Input","prompt","className","children","name","colorMode","lineData","onInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/johndoe/Documents/Project trial/zen-app/client/src/components/ThoughtsVilla.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './ThoughtsVilla.css';\n\n// function ThoughtsVilla() {\n//   const [thought, setThought] = useState('');\n//   const [backgroundColor, setBackgroundColor] = useState('rgb(169, 169, 169)'); // Starting with a dull color\n//   const [explosion, setExplosion] = useState(false);\n\n//   const handleThoughtChange = (e) => {\n//     const inputText = e.target.value;\n//     setThought(inputText);\n\n//     // Calculate the background color based on input length\n//     const inputLength = inputText.length;\n//     const maxLength = 100; // Define a max length for mapping\n//     const colorValue = Math.min(255, Math.floor((inputLength / maxLength) * 255));\n\n//     // Create a gradient from dull color to bright color\n//     const newBackgroundColor = `rgb(${169 + colorValue}, ${169 + colorValue}, ${169 - colorValue})`;\n//     setBackgroundColor(newBackgroundColor);\n//   };\n\n//   const handleThoughtSubmit = (e) => {\n//     e.preventDefault();\n//     // Perform actions on submit, like saving the thought or transitioning the color\n//     // Add explosion animation here\n//     setExplosion(true);\n//     setTimeout(() => {\n//       setExplosion(false);\n//       setThought('');\n//       setBackgroundColor('rgb(169, 169, 169)'); // Reset background color to dull\n//     }, 1000); // Adjust the duration as needed\n//   };\n\n//   return (\n//     <div className=\"thoughts-villa\" style={{ backgroundColor: backgroundColor }}>\n//       <h1>Thoughts Villa</h1>\n//       <form onSubmit={handleThoughtSubmit}>\n//         <textarea\n//           value={thought}\n//           onChange={handleThoughtChange}\n//           placeholder=\"Type your thoughts here...\"\n//           className={`thought-input ${explosion ? 'explode' : ''}`}\n//         ></textarea>\n//         <button type=\"submit\" className=\"submit-button\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ThoughtsVilla;\n\nimport React, { useState } from 'react';\nimport Terminal, { LineType } from 'react-terminal-ui';\nimport './ThoughtsVilla.css';\n\nfunction ThoughtsVilla() {\n  const [thoughts, setThoughts] = useState([]);\n  const [terminalLineData, setTerminalLineData] = useState([\n    { type: LineType.Output, value: 'Enter your thoughts below:' },\n  ]);\n\n  const handleInput = (input) => {\n    const newLine = { type: LineType.Output, value: input };\n    setThoughts([...thoughts, input]);\n    setTerminalLineData([...terminalLineData, newLine, { type: LineType.Input, prompt: '>', value: '' }]);\n  };\n\n  return (\n    <div className=\"thoughts-villa\">\n      <Terminal name=\"Thoughts Villa\" colorMode=\"light\" lineData={terminalLineData} onInput={handleInput} />\n    </div>\n  );\n}\n\nexport default ThoughtsVilla;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,IAAIC,QAAQ,QAAQ,mBAAmB;AACtD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,CACvD;IAAEW,IAAI,EAAET,QAAQ,CAACU,MAAM;IAAEC,KAAK,EAAE;EAA6B,CAAC,CAC/D,CAAC;EAEF,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,OAAO,GAAG;MAAEL,IAAI,EAAET,QAAQ,CAACU,MAAM;MAAEC,KAAK,EAAEE;IAAM,CAAC;IACvDP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,KAAK,CAAC,CAAC;IACjCL,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAEO,OAAO,EAAE;MAAEL,IAAI,EAAET,QAAQ,CAACe,KAAK;MAAEC,MAAM,EAAE,GAAG;MAAEL,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC;EACvG,CAAC;EAED,oBACET,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BhB,OAAA,CAACH,QAAQ;MAACoB,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAC,OAAO;MAACC,QAAQ,EAAEd,gBAAiB;MAACe,OAAO,EAAEV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnG,CAAC;AAEV;AAACtB,EAAA,CAjBQD,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAmBtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}