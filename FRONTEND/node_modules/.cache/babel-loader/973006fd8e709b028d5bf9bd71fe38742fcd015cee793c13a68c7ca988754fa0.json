{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MoodTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodTracker({\n  addPlant,\n  moodCount\n}) {\n  _s();\n  const [mood, setMood] = useState('');\n  const navigate = useNavigate();\n  const handleMoodSelect = (selectedMood, plant) => {\n    setMood(selectedMood);\n    addPlant(plant, selectedMood); // Add both plant and mood to the garden\n  };\n  const getBackgroundColor = () => {\n    switch (mood) {\n      case 'happy':\n        return 'lightgreen';\n      case 'sad':\n        return 'lightblue';\n      case 'angry':\n        return 'red';\n      case 'relaxed':\n        return 'lightyellow';\n      default:\n        return 'white';\n    }\n  };\n  const canViewGarden = Object.values(moodCount).reduce((total, count) => total + count, 0) > 4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    style: {\n      backgroundColor: getBackgroundColor()\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MOOD TRACKER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How are you feeling at the moment?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('happy', '🌻'),\n        \"aria-label\": \"Happy\",\n        children: \"Happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('sad', '🌵'),\n        \"aria-label\": \"Sad\",\n        children: \"Sad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('angry', '🌺'),\n        \"aria-label\": \"Angry\",\n        children: \"Angry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('relaxed', '🍀'),\n        \"aria-label\": \"Relaxed\",\n        children: \"Relaxed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-garden\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/garden'),\n        disabled: !canViewGarden,\n        children: \"View Your Garden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), !canViewGarden && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mood-warning\",\n        children: \"Make at least 5 mood entries to view your garden.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(MoodTracker, \"SL37pjR4BBtC7MW0wL7KfBNcktE=\", false, function () {\n  return [useNavigate];\n});\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","MoodTracker","addPlant","moodCount","_s","mood","setMood","navigate","handleMoodSelect","selectedMood","plant","getBackgroundColor","canViewGarden","Object","values","reduce","total","count","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MoodTracker.css';\n\nfunction MoodTracker({ addPlant, moodCount }) {\n    const [mood, setMood] = useState('');\n    const navigate = useNavigate();\n\n    const handleMoodSelect = (selectedMood, plant) => {\n        setMood(selectedMood);\n        addPlant(plant, selectedMood); // Add both plant and mood to the garden\n    };\n\n    const getBackgroundColor = () => {\n        switch (mood) {\n            case 'happy':\n                return 'lightgreen';\n            case 'sad':\n                return 'lightblue';\n            case 'angry':\n                return 'red';\n            case 'relaxed':\n                return 'lightyellow';\n            default:\n                return 'white';\n        }\n    };\n\n    const canViewGarden = Object.values(moodCount).reduce((total, count) => total + count, 0) > 4;\n\n    return (\n        <div className=\"mood-tracker\" style={{ backgroundColor: getBackgroundColor() }}>\n            <h1>MOOD TRACKER</h1>\n            <p>How are you feeling at the moment?</p>\n            <div className=\"mood-options\">\n                <button\n                    onClick={() => handleMoodSelect('happy', '🌻')}\n                    aria-label=\"Happy\"\n                >\n                    Happy\n                </button>\n                <button\n                    onClick={() => handleMoodSelect('sad', '🌵')}\n                    aria-label=\"Sad\"\n                >\n                    Sad\n                </button>\n                <button\n                    onClick={() => handleMoodSelect('angry', '🌺')}\n                    aria-label=\"Angry\"\n                >\n                    Angry\n                </button>\n                <button\n                    onClick={() => handleMoodSelect('relaxed', '🍀')}\n                    aria-label=\"Relaxed\"\n                >\n                    Relaxed\n                </button>\n            </div>\n            <div className=\"view-garden\">\n                <button \n                    onClick={() => navigate('/garden')}\n                    disabled={!canViewGarden}\n                >\n                    View Your Garden\n                </button>\n                {!canViewGarden && <p className=\"mood-warning\">Make at least 5 mood entries to view your garden.</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default MoodTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}