{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/ZEN/FRONTEND/src/components/ThoughtsBacklog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ThoughtsBacklog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateRandomProblem() {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  const operator = Math.random() > 0.5 ? '+' : '-';\n  return {\n    question: `${num1} ${operator} ${num2}`,\n    answer: operator === '+' ? num1 + num2 : num1 - num2\n  };\n}\nfunction ThoughtsBacklog({\n  thoughts\n}) {\n  _s();\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [showEntry, setShowEntry] = useState(false);\n  const [quiz, setQuiz] = useState(generateRandomProblem());\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isQuizVisible, setIsQuizVisible] = useState(false);\n  const handleCardClick = index => {\n    setSelectedEntry(thoughts[index]);\n    setIsQuizVisible(true);\n  };\n  const handleQuizSubmit = () => {\n    if (parseInt(userAnswer) === quiz.answer) {\n      setIsQuizVisible(false);\n      setShowEntry(true);\n      // Generate a new quiz question for the next entry\n      setQuiz(generateRandomProblem());\n    } else {\n      alert('Incorrect answer. Please try again.');\n    }\n  };\n  const handleOverlayClick = () => {\n    setShowEntry(false);\n    setIsQuizVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-backlog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Thoughts Backlog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-container\",\n      children: thoughts.map((thought, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard\",\n        onClick: () => handleCardClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-title\",\n          children: [\"Entry \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isQuizVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: handleOverlayClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: quiz.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: userAnswer,\n            onChange: e => setUserAnswer(e.target.value),\n            placeholder: \"Enter your answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleQuizSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), showEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-screen\",\n      onClick: handleOverlayClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entry-content\",\n        onClick: e => e.stopPropagation(),\n        children: selectedEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ThoughtsBacklog, \"acNujK2Mq3l8ey9J+XfedTwsuDE=\");\n_c = ThoughtsBacklog;\nexport default ThoughtsBacklog;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsBacklog\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","generateRandomProblem","num1","Math","floor","random","num2","operator","question","answer","ThoughtsBacklog","thoughts","_s","selectedEntry","setSelectedEntry","showEntry","setShowEntry","quiz","setQuiz","userAnswer","setUserAnswer","isQuizVisible","setIsQuizVisible","handleCardClick","index","handleQuizSubmit","parseInt","alert","handleOverlayClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","thought","onClick","e","stopPropagation","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/johndoe/ZEN/FRONTEND/src/components/ThoughtsBacklog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ThoughtsBacklog.css';\n\nfunction generateRandomProblem() {\n  const num1 = Math.floor(Math.random() * 10) + 1;\n  const num2 = Math.floor(Math.random() * 10) + 1;\n  const operator = Math.random() > 0.5 ? '+' : '-';\n  return {\n    question: `${num1} ${operator} ${num2}`,\n    answer: operator === '+' ? num1 + num2 : num1 - num2\n  };\n}\n\nfunction ThoughtsBacklog({ thoughts }) {\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [showEntry, setShowEntry] = useState(false);\n  const [quiz, setQuiz] = useState(generateRandomProblem());\n  const [userAnswer, setUserAnswer] = useState('');\n  const [isQuizVisible, setIsQuizVisible] = useState(false);\n\n  const handleCardClick = (index) => {\n    setSelectedEntry(thoughts[index]);\n    setIsQuizVisible(true);\n  };\n\n  const handleQuizSubmit = () => {\n    if (parseInt(userAnswer) === quiz.answer) {\n      setIsQuizVisible(false);\n      setShowEntry(true);\n      // Generate a new quiz question for the next entry\n      setQuiz(generateRandomProblem());\n    } else {\n      alert('Incorrect answer. Please try again.');\n    }\n  };\n\n  const handleOverlayClick = () => {\n    setShowEntry(false);\n    setIsQuizVisible(false);\n  };\n\n  return (\n    <div className=\"thoughts-backlog\">\n      <h1>Your Thoughts Backlog</h1>\n      <div className=\"flashcard-container\">\n        {thoughts.map((thought, index) => (\n          <div\n            key={index}\n            className=\"flashcard\"\n            onClick={() => handleCardClick(index)}\n          >\n            <div className=\"flashcard-title\">\n              Entry {index + 1}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {isQuizVisible && (\n        <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"quiz-question\">\n              <label>{quiz.question}</label>\n              <input\n                type=\"number\"\n                value={userAnswer}\n                onChange={(e) => setUserAnswer(e.target.value)}\n                placeholder=\"Enter your answer\"\n              />\n            </div>\n            <button onClick={handleQuizSubmit}>Submit</button>\n          </div>\n        </div>\n      )}\n\n      {showEntry && (\n        <div className=\"entry-screen\" onClick={handleOverlayClick}>\n          <div className=\"entry-content\" onClick={(e) => e.stopPropagation()}>\n            {selectedEntry}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ThoughtsBacklog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}